{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/about.js","component/pages/NotFound.js","component/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","error","placeholder","onChange","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","about","NotFound","Test","title","body","fetch","then","response","json","console","log","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce20e22f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  // NOTE componentDidMount() is invoked immediately after a component is mounted (inserted into the tree)\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","// Use 'rcc' snippet to generate template\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    // NOTE axios is a third party tool for handle HttpResponse\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      // Only delete from DOM\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { showContactInfo } = this.state;\n    const { name, email, phone, id } = this.props.contact;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card card-body mb-3'>\n              <h4 className='card-title'>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  style={{ cursor: 'pointer' }}\n                  className='fas fa-caret-down'\n                />\n                <i\n                  className='fas fa-trash'\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className='fas fa-pencil-alt'\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className='list-group'>\n                  <li className='list-group-item'>{email}</li>\n                  <li className='list-group-item'>{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  deleteContact = id => {\n    const { contacts } = this.state;\n\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({ contacts: newContacts });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className='display-4 mb-2'>\n                <span className='text-primary'>Contact </span>\n                List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0 '>\n      <div className='container'>\n        <a className='navbar-brand mb-0 h1' href='/'>\n          {branding}\n        </a>\n        <div>\n          <ul className='navbar-nav mr-auto'>\n            <li className='nav-item'>\n              <Link className='nav-link' to='/'>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link className='nav-link' to='/contact/add'>\n                Add\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link className='nav-link' to='/about'>\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  error,\n  placeholder,\n  type,\n  onChange\n}) => {\n  return (\n    <React.Fragment>\n      <label htmlFor={name}>{label}</label>\n      <div className='form-group'>\n        <input\n          type={type}\n          name={name}\n          className={classnames('form-control form-control-lg', {\n            'is-invalid': error\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className='invalid-feedback'>{error}</div>}\n      </div>\n    </React.Fragment>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\n// NOTE generate id using uuid()\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is requried'\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      // NOTE generate id with uuid()\n      // id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Add Contact</div>\n              <div className='card-body'>\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name...'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    type='email'\n                    label='Email'\n                    name='email'\n                    placeholder='Enter Email...'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter Phone...'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type='submit'\n                    name='submit'\n                    value='Add Contact'\n                    className='btn btn-block btn-light'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\n\n// NOTE generate id using uuid()\n// import uuid from 'uuid';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'Name is required'\n        }\n      });\n      return;\n    }\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      });\n      return;\n    }\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is requried'\n        }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n    // NOTE (es6) same as\n    // const updContact = {\n    //   name: name,\n    //   email: email,\n    //   phone: phone\n    // }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className='card mb-3'>\n              <div className='card-header'>Edit Contact</div>\n              <div className='card-body'>\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label='Name'\n                    name='name'\n                    placeholder='Enter Name...'\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    type='email'\n                    label='Email'\n                    name='email'\n                    placeholder='Enter Email...'\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label='Phone'\n                    name='phone'\n                    placeholder='Enter Phone...'\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type='submit'\n                    name='submit'\n                    value='Edit Contact'\n                    className='btn btn-block btn-light'\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>Simple app to manage contacts</p>\n      <p className='text-secondary'>Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className='display-4'>\n        <span className='text-danger'>404 </span>\n        Page Not Found\n      </h1>\n      <p className='lead'>Sorry, the page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          title: data.title,\n          body: data.body\n        });\n      });\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate');\n  // }\n\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState) {\n  //   console.log('compoentWillReveiveProps');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, PrevState) {\n  //   console.log('getDerivedStateFromProps');\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate');\n  // }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/about';\nimport NotFound from './component/pages/NotFound';\nimport Test from './component/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import 'materialize-css/dist/css/materialize.css';\n// import 'materialize-css/dist/js/materialize.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}